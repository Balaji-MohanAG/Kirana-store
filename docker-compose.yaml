services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
#    networks:
#      - kirana_store_network

  mongodb:
    image: mongo:latest
    container_name: mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
      - MONGO_INITDB_DATABASE=mydatabase
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
#    networks:
#      - kirana_store_network

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
#    networks:
#      - kirana_store_network

  kafka:
    image: bitnami/kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
     - KAFKA_ENABLE_KRAFT=yes
     - KAFKA_CFG_PROCESS_ROLES=broker,controller
     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
     - KAFKA_BROKER_ID=1
     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
     - ALLOW_PLAINTEXT_LISTENER=yes
     - KAFKA_CFG_NODE_ID=1
     - KAFKA_KRAFT_CLUSTER_ID=MkU3OEVBNTcwNTJENDM2Qk
    volumes:
      - ./kafka:/bitnami/kafka
#    networks:
#      - kirana_store_network


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#    networks:
#      - kirana_store_network

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
#    networks:
#      - kirana_store_network

#  spring-boot-app:
#    build: ./
#    container_name: main-app
#    restart: always
#    ports:
#      - "8080:8080"
#    depends_on:
#      - postgres
#      - redis
#      - mongodb
#      - kafka
#    networks:
#      - kirana_store_network

volumes:
  postgres_data:
  mongo-data:
  kafka_data:
  redis_data:
  grafana-storage:

#networks:
#  kirana_store_network:
